#
# TEMPORARY Build file, AUTO-GENERATED by http://vcproj2cmake.sf.net
# DO NOT CHECK INTO VERSION CONTROL OR APPLY "PERMANENT" MODIFICATIONS!!
#

# >= 2.6 due to crucial set_property(... COMPILE_DEFINITIONS_* ...)
cmake_minimum_required(VERSION 2.6)
if(COMMAND cmake_policy)
  if(POLICY CMP0005)
    cmake_policy(SET CMP0005 NEW) # automatic quoting of brackets
  endif(POLICY CMP0005)

  if(POLICY CMP0011)
    # we do want the includer to be affected by our updates,
    # since it might define project-global settings.
    cmake_policy(SET CMP0011 OLD)
  endif(POLICY CMP0011)
  if(POLICY CMP0015)
    # .vcproj contains relative paths to additional library directories, thus we need to be able to cope with that
    cmake_policy(SET CMP0015 NEW)
  endif(POLICY CMP0015)
endif(COMMAND cmake_policy)

set(CMAKE_MODULE_PATH "C:\Users\Ash\Desktop\NL6-DSS - Copy\trunk\strikles\red_development\Minion\libs\ANN/./cmake/Modules" ${CMAKE_MODULE_PATH})

set(V2C_CONFIG_DIR_LOCAL "./cmake/vcproj2cmake")

# include the main file for pre-defined vcproj2cmake helper functions
include(vcproj2cmake_func)

# include the main file for pre-defined vcproj2cmake definitions
include(vcproj2cmake_defs)

include(${V2C_CONFIG_DIR_LOCAL}/hook_pre.txt OPTIONAL)

project( ANN )

# this part is for including a file which contains
# _globally_ applicable settings for all sub projects of a master project
# (compiler flags, path settings, platform stuff, ...)
# e.g. have vcproj2cmake-specific MasterProjectDefaults_vcproj2cmake
# which then _also_ includes a global MasterProjectDefaults module
# for _all_ CMakeLists.txt. This needs to sit post-project()
# since e.g. compiler info is dependent on a valid project.
# MasterProjectDefaults_vcproj2cmake is supposed to define
# generic settings (such as V2C_HOOK_PROJECT, defined as e.g.
# ./cmake/vcproj2cmake/hook_project.txt, and other hook include variables below).
# NOTE: it usually should also reset variables V2C_LIBS, V2C_SOURCES etc.
# as used below since they should contain directory-specific contents only, not accumulate!
include(MasterProjectDefaults_vcproj2cmake OPTIONAL)
# hook e.g. for invoking Find scripts as expected by
# the _LIBRARIES / _INCLUDE_DIRS mappings created
# by your include/dependency map files.
include(${V2C_HOOK_PROJECT} OPTIONAL)

    set(SOURCES_files_Source_Files
      ../../libs/ANN/src/ANN.cpp
      ../../libs/ANN/src/bd_fix_rad_search.cpp
      ../../libs/ANN/src/bd_pr_search.cpp
      ../../libs/ANN/src/bd_search.cpp
      ../../libs/ANN/src/bd_tree.cpp
      ../../libs/ANN/src/brute.cpp
      ../../libs/ANN/src/kd_dump.cpp
      ../../libs/ANN/src/kd_fix_rad_search.cpp
      ../../libs/ANN/src/kd_pr_search.cpp
      ../../libs/ANN/src/kd_search.cpp
      ../../libs/ANN/src/kd_split.cpp
      ../../libs/ANN/src/kd_tree.cpp
      ../../libs/ANN/src/kd_util.cpp
      ../../libs/ANN/src/perf.cpp
    )
    source_group("Source Files" FILES ${SOURCES_files_Source_Files})

    set(SOURCES_Source_Files
      ${SOURCES_files_Source_Files}
    )

    set(SOURCES_files_Header_Files
      ../../libs/ANN/include/Ann/ANN.h
      ../../libs/ANN/include/Ann/ANNperf.h
      ../../libs/ANN/include/Ann/ANNx.h
      ../../libs/ANN/src/bd_tree.h
      ../../libs/ANN/src/kd_fix_rad_search.h
      ../../libs/ANN/src/kd_pr_search.h
      ../../libs/ANN/src/kd_search.h
      ../../libs/ANN/src/kd_split.h
      ../../libs/ANN/src/kd_tree.h
      ../../libs/ANN/src/kd_util.h
      ../../libs/ANN/src/pr_queue.h
      ../../libs/ANN/src/pr_queue_k.h
    )
    source_group("Header Files" FILES ${SOURCES_files_Header_Files})

    set(SOURCES_Header_Files
      ${SOURCES_files_Header_Files}
    )

  set(SOURCES_
    ${SOURCES_Source_Files}
    ${SOURCES_Header_Files}
  )

include_directories(BEFORE ${PROJECT_SOURCE_DIR})

include(${V2C_HOOK_POST_SOURCES} OPTIONAL)

if(CMAKE_BUILD_TYPE STREQUAL "Debug")

  include_directories(
    ../../libs/ANN/include
  )

  # hook include after all definitions have been made
  # (but _before_ target is created using the source list!)
  include(${V2C_HOOK_POST_DEFINITIONS} OPTIONAL)

  set(SOURCES
    ${SOURCES_}
    ${V2C_SOURCES}
  )

  link_directories(
    ${V2C_LIB_DIRS}
  )

  add_library( ANN SHARED ${SOURCES} )

  target_link_libraries(ANN
    ${V2C_LIBS}
  )

  # e.g. to be used for tweaking target properties etc.
  include(${V2C_HOOK_POST_TARGET} OPTIONAL)
endif(CMAKE_BUILD_TYPE STREQUAL "Debug")
if(TARGET ANN)

  set_property(TARGET ANN APPEND PROPERTY COMPILE_DEFINITIONS_DEBUG
    ANN_NO_RANDOM
    ANN_PERF
    DLL_EXPORTS
    WIN32
    _DEBUG
    _USRDLL
    _WINDOWS
  )
endif(TARGET ANN)

if(CMAKE_CONFIGURATION_TYPES OR CMAKE_BUILD_TYPE STREQUAL "Release")

  include_directories(
    ../../libs/ANN/include
  )

  # hook include after all definitions have been made
  # (but _before_ target is created using the source list!)
  include(${V2C_HOOK_POST_DEFINITIONS} OPTIONAL)

  set(SOURCES
    ${SOURCES_}
    ${V2C_SOURCES}
  )

  link_directories(
    ${V2C_LIB_DIRS}
  )

  add_library( ANN SHARED ${SOURCES} )

  target_link_libraries(ANN
    ${V2C_LIBS}
  )

  # e.g. to be used for tweaking target properties etc.
  include(${V2C_HOOK_POST_TARGET} OPTIONAL)
endif(CMAKE_CONFIGURATION_TYPES OR CMAKE_BUILD_TYPE STREQUAL "Release")
if(TARGET ANN)

  set_property(TARGET ANN APPEND PROPERTY COMPILE_DEFINITIONS_RELEASE
    ANN_NO_RANDOM
    DLL_EXPORTS
    NDEBUG
    WIN32
    _USRDLL
    _WINDOWS
  )
endif(TARGET ANN)

set_property(TARGET ANN PROPERTY PROJECT_LABEL "ANN")

v2c_rebuild_on_update(ANN "${CMAKE_CURRENT_SOURCE_DIR}/ann-dll.vcproj" ${CMAKE_CURRENT_LIST_FILE} "/Users/Ash/Desktop/vcproj2cmake/scripts/vcproj2cmake.rb" "C:\Users\Ash\Desktop\NL6-DSS - Copy\trunk\strikles\red_development\Minion\libs\ANN")

include(${V2C_HOOK_POST} OPTIONAL)
