#
# TEMPORARY Build file, AUTO-GENERATED by http://vcproj2cmake.sf.net
# DO NOT CHECK INTO VERSION CONTROL OR APPLY "PERMANENT" MODIFICATIONS!!
#

# >= 2.6 due to crucial set_property(... COMPILE_DEFINITIONS_* ...)
cmake_minimum_required(VERSION 2.6)
if(COMMAND cmake_policy)
  if(POLICY CMP0005)
    cmake_policy(SET CMP0005 NEW) # automatic quoting of brackets
  endif(POLICY CMP0005)

  if(POLICY CMP0011)
    # we do want the includer to be affected by our updates,
    # since it might define project-global settings.
    cmake_policy(SET CMP0011 OLD)
  endif(POLICY CMP0011)
  if(POLICY CMP0015)
    # .vcproj contains relative paths to additional library directories, thus we need to be able to cope with that
    cmake_policy(SET CMP0015 NEW)
  endif(POLICY CMP0015)
endif(COMMAND cmake_policy)

set(CMAKE_MODULE_PATH "C:\Users\Ash\Desktop\NL6-DSS\trunk\strikles\red_development\Minion\src/./cmake/Modules" ${CMAKE_MODULE_PATH})

set(V2C_CONFIG_DIR_LOCAL "./cmake/vcproj2cmake")

# include the main file for pre-defined vcproj2cmake helper functions
include(vcproj2cmake_func)

# include the main file for pre-defined vcproj2cmake definitions
include(vcproj2cmake_defs)

include(${V2C_CONFIG_DIR_LOCAL}/hook_pre.txt OPTIONAL)

project( Master )

# this part is for including a file which contains
# _globally_ applicable settings for all sub projects of a master project
# (compiler flags, path settings, platform stuff, ...)
# e.g. have vcproj2cmake-specific MasterProjectDefaults_vcproj2cmake
# which then _also_ includes a global MasterProjectDefaults module
# for _all_ CMakeLists.txt. This needs to sit post-project()
# since e.g. compiler info is dependent on a valid project.
# MasterProjectDefaults_vcproj2cmake is supposed to define
# generic settings (such as V2C_HOOK_PROJECT, defined as e.g.
# ./cmake/vcproj2cmake/hook_project.txt, and other hook include variables below).
# NOTE: it usually should also reset variables V2C_LIBS, V2C_SOURCES etc.
# as used below since they should contain directory-specific contents only, not accumulate!
include(MasterProjectDefaults_vcproj2cmake OPTIONAL)
# hook e.g. for invoking Find scripts as expected by
# the _LIBRARIES / _INCLUDE_DIRS mappings created
# by your include/dependency map files.
include(${V2C_HOOK_PROJECT} OPTIONAL)

      set(SOURCES_files_Source_Files__CANN
        ../../src/CANN/CANN.cpp
        ../../src/CANN/CScaling.cpp
      )
      source_group("Source Files\\CANN" FILES ${SOURCES_files_Source_Files__CANN})

      set(SOURCES_Source_Files__CANN
        ${SOURCES_files_Source_Files__CANN}
      )

      set(SOURCES_files_Source_Files__Net
        ../../src/Net/CEvent/CEvent.cpp
        ../../src/Net/CException/CException.cpp
        ../../src/Net/CHostInfo/CHostInfo.cpp
        ../../src/Net/CSemaphore/CSemaphore.cpp
        ../../src/Net/CSock/CSock.cpp
        ../../src/Net/CSock/CSockErrors.cpp
        ../../src/Net/CThread/CThread.cpp
        ../../src/Net/CThreadArgument/CThreadArgument.cpp
      )
      source_group("Source Files\\Net" FILES ${SOURCES_files_Source_Files__Net})

      set(SOURCES_Source_Files__Net
        ${SOURCES_files_Source_Files__Net}
      )

      set(SOURCES_files_Source_Files__Config
        ../../src/Config/CIniReader.cpp
        ../../src/Config/CIniWriter.cpp
        ../../src/Config/CPreferences.cpp
      )
      source_group("Source Files\\Config" FILES ${SOURCES_files_Source_Files__Config})

      set(SOURCES_Source_Files__Config
        ${SOURCES_files_Source_Files__Config}
      )

      set(SOURCES_files_Source_Files__Calc
        ../../src/Calc/CEquityCalculator.cpp
        ../../src/Calc/CHandDistribution.cpp
        ../../src/Calc/CHandPotential.cpp
      )
      source_group("Source Files\\Calc" FILES ${SOURCES_files_Source_Files__Calc})

      set(SOURCES_Source_Files__Calc
        ${SOURCES_files_Source_Files__Calc}
      )

      set(SOURCES_files_Source_Files__DB
        ../../src/DB/CDatabase.cpp
      )
      source_group("Source Files\\DB" FILES ${SOURCES_files_Source_Files__DB})

      set(SOURCES_Source_Files__DB
        ${SOURCES_files_Source_Files__DB}
      )

      set(SOURCES_files_Source_Files__Util
        ../../src/Util/Util.cpp
        ../../src/Util/Util_Checksum.cpp
        ../../src/Util/Util_logging.cpp
        ../../src/Util/Util_LUT.cpp
        ../../src/Util/Util_MagicNumbers.cpp
        ../../src/Util/Util_mtrand.cpp
      )
      source_group("Source Files\\Util" FILES ${SOURCES_files_Source_Files__Util})

      set(SOURCES_Source_Files__Util
        ${SOURCES_files_Source_Files__Util}
      )

      set(SOURCES_files_Source_Files__Structs
        ../../src/StructDefines/StructDefines.cpp
      )
      source_group("Source Files\\Structs" FILES ${SOURCES_files_Source_Files__Structs})

      set(SOURCES_Source_Files__Structs
        ${SOURCES_files_Source_Files__Structs}
      )

    set(SOURCES_files_Source_Files
      ../../src/Master/CKNN.cpp
      ../../src/Master/main.cpp
    )
    source_group("Source Files" FILES ${SOURCES_files_Source_Files})

    set(SOURCES_Source_Files
      ${SOURCES_Source_Files__CANN}
      ${SOURCES_Source_Files__Net}
      ${SOURCES_Source_Files__Config}
      ${SOURCES_Source_Files__Calc}
      ${SOURCES_Source_Files__DB}
      ${SOURCES_Source_Files__Util}
      ${SOURCES_Source_Files__Structs}
      ${SOURCES_files_Source_Files}
    )

      set(SOURCES_files_Header_Files__Util
        ../../src/Util/Util.h
        ../../src/Util/Util_Checksum.h
        ../../src/Util/Util_logging.h
        ../../src/Util/Util_LUT.h
        ../../src/Util/Util_MagicNumbers.h
        ../../src/Util/Util_mtrand.h
      )
      source_group("Header Files\\Util" FILES ${SOURCES_files_Header_Files__Util})

      set(SOURCES_Header_Files__Util
        ${SOURCES_files_Header_Files__Util}
      )

        set(SOURCES_files_Header_Files__DB__postgres
          ../../libs/postgres/libpq-fe.h
          ../../libs/postgres/postgres_ext.h
        )
        source_group("Header Files\\DB\\postgres" FILES ${SOURCES_files_Header_Files__DB__postgres})

        set(SOURCES_Header_Files__DB__postgres
          ${SOURCES_files_Header_Files__DB__postgres}
        )

      set(SOURCES_files_Header_Files__DB
        ../../src/DB/CDatabase.h
      )
      source_group("Header Files\\DB" FILES ${SOURCES_files_Header_Files__DB})

      set(SOURCES_Header_Files__DB
        ${SOURCES_Header_Files__DB__postgres}
        ${SOURCES_files_Header_Files__DB}
      )

      set(SOURCES_files_Header_Files__Net
        ../../src/Net/CEvent/CEvent.h
        ../../src/Net/CException/CException.h
        ../../src/Net/CHostInfo/CHostInfo.h
        ../../src/Net/CSemaphore/CSemaphore.h
        ../../src/Net/CSerializer/CSerializer.hpp
        ../../src/Net/CSock/CSock.h
        ../../src/Net/CThread/CThread.h
        ../../src/Net/CThreadArgument/CThreadArgument.h
      )
      source_group("Header Files\\Net" FILES ${SOURCES_files_Header_Files__Net})

      set(SOURCES_Header_Files__Net
        ${SOURCES_files_Header_Files__Net}
      )

      set(SOURCES_files_Header_Files__Config
        ../../src/Config/CIniReader.h
        ../../src/Config/CIniWriter.h
        ../../src/Config/CPreferences.h
      )
      source_group("Header Files\\Config" FILES ${SOURCES_files_Header_Files__Config})

      set(SOURCES_Header_Files__Config
        ${SOURCES_files_Header_Files__Config}
      )

      set(SOURCES_files_Header_Files__Calc
        ../../src/Calc/CEquityCalculator.h
        ../../src/Calc/CHandDistribution.h
        ../../src/Calc/CHandPotential.h
      )
      source_group("Header Files\\Calc" FILES ${SOURCES_files_Header_Files__Calc})

      set(SOURCES_Header_Files__Calc
        ${SOURCES_files_Header_Files__Calc}
      )

      set(SOURCES_files_Header_Files__CANN
        ../../src/CANN/CANN.h
        ../../src/CANN/CScaling.h
      )
      source_group("Header Files\\CANN" FILES ${SOURCES_files_Header_Files__CANN})

      set(SOURCES_Header_Files__CANN
        ${SOURCES_files_Header_Files__CANN}
      )

      set(SOURCES_files_Header_Files__Structs
        ../../src/StructDefines/structdefines.h
      )
      source_group("Header Files\\Structs" FILES ${SOURCES_files_Header_Files__Structs})

      set(SOURCES_Header_Files__Structs
        ${SOURCES_files_Header_Files__Structs}
      )

    set(SOURCES_files_Header_Files
      ../../src/Master/CKNN.h
    )
    source_group("Header Files" FILES ${SOURCES_files_Header_Files})

    set(SOURCES_Header_Files
      ${SOURCES_Header_Files__Util}
      ${SOURCES_Header_Files__DB}
      ${SOURCES_Header_Files__Net}
      ${SOURCES_Header_Files__Config}
      ${SOURCES_Header_Files__Calc}
      ${SOURCES_Header_Files__CANN}
      ${SOURCES_Header_Files__Structs}
      ${SOURCES_files_Header_Files}
    )

  set(SOURCES_
    ${SOURCES_Source_Files}
    ${SOURCES_Header_Files}
  )

include_directories(BEFORE ${PROJECT_SOURCE_DIR})

include(${V2C_HOOK_POST_SOURCES} OPTIONAL)

if(CMAKE_BUILD_TYPE STREQUAL "Debug")

  include_directories(
    ../../libs/ANN/include
    ../../libs/Eigen
    ../../libs/pokereval/include
    ../../libs/postgres
    ../../src
  )

  # hook include after all definitions have been made
  # (but _before_ target is created using the source list!)
  include(${V2C_HOOK_POST_DEFINITIONS} OPTIONAL)

  set(SOURCES
    ${SOURCES_}
    ${V2C_SOURCES}
  )

  link_directories(
    "$(OutDir)"
    ../../libs/postgres/MTd
    ${V2C_LIB_DIRS}
  )

  add_executable( Master WIN32 ${SOURCES} )

  target_link_libraries(Master
    secur32
    ws2_32
    ANN
    poker-eval
    libpqd
    ${V2C_LIBS}
  )

  # e.g. to be used for tweaking target properties etc.
  include(${V2C_HOOK_POST_TARGET} OPTIONAL)
endif(CMAKE_BUILD_TYPE STREQUAL "Debug")
if(TARGET Master)

  set_property(TARGET Master APPEND PROPERTY COMPILE_DEFINITIONS_DEBUG
    MASTER
    WIN32
    WIN32_LEAN_AND_MEAN
    _CONSOLE
    _DEBUG
  )
endif(TARGET Master)

if(CMAKE_CONFIGURATION_TYPES OR CMAKE_BUILD_TYPE STREQUAL "Release")

  include_directories(
    ../../libs/ANN/include
    ../../libs/pokereval/include
    ../../libs/postgres
    ../../src
  )

  # hook include after all definitions have been made
  # (but _before_ target is created using the source list!)
  include(${V2C_HOOK_POST_DEFINITIONS} OPTIONAL)

  set(SOURCES
    ${SOURCES_}
    ${V2C_SOURCES}
  )

  link_directories(
    "$(OutDir)"
    ../../libs/postgres/MT
    ${V2C_LIB_DIRS}
  )

  add_executable( Master WIN32 ${SOURCES} )

  target_link_libraries(Master
    secur32
    ws2_32
    ANN
    poker-eval
    libpq
    ${V2C_LIBS}
  )

  # e.g. to be used for tweaking target properties etc.
  include(${V2C_HOOK_POST_TARGET} OPTIONAL)
endif(CMAKE_CONFIGURATION_TYPES OR CMAKE_BUILD_TYPE STREQUAL "Release")
if(TARGET Master)

  set_property(TARGET Master APPEND PROPERTY COMPILE_DEFINITIONS_RELEASE
    MASTER
    NDEBUG
    WIN32
    WIN32_LEAN_AND_MEAN
    _CONSOLE
  )
endif(TARGET Master)

set_property(TARGET Master PROPERTY PROJECT_LABEL "Master")
set_property(TARGET Master PROPERTY VS_KEYWORD "Win32Proj")

v2c_rebuild_on_update(Master "${CMAKE_CURRENT_SOURCE_DIR}/Master.vcproj" ${CMAKE_CURRENT_LIST_FILE} "/Users/Ash/Desktop/vcproj2cmake/scripts/vcproj2cmake.rb" "C:\Users\Ash\Desktop\NL6-DSS\trunk\strikles\red_development\Minion\src")

include(${V2C_HOOK_POST} OPTIONAL)
